{
  "basePath": "/graph/v1",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Author": {
      "properties": {
        "affiliations": {
          "description": "List of affiliations",
          "example": [
            "Allen Institute for AI"
          ],
          "type": "object"
        },
        "aliases": {
          "description": "List of aliases",
          "example": [
            "O Et-zioni",
            "Oren Etzioni"
          ],
          "type": "object"
        },
        "authorId": {
          "example": "1741101",
          "type": "string"
        },
        "citationCount": {
          "description": "Author's total citations count",
          "example": 50,
          "type": "string"
        },
        "externalIds": {
          "description": "ORCID/DBLP IDs for this author, if known",
          "example": {
            "DBLP": 123,
            "ORCID": 456
          },
          "type": "object"
        },
        "hIndex": {
          "description": "Author's h-index",
          "example": 5,
          "type": "string"
        },
        "homepage": {
          "description": "Author's own homepage",
          "example": "https://allenai.org/",
          "type": "string"
        },
        "name": {
          "example": "Oren Etzioni",
          "title": "This field will be provided if no fields are specified",
          "type": "string"
        },
        "paperCount": {
          "description": "Author's total publications count",
          "example": 10,
          "type": "string"
        },
        "url": {
          "description": "URL on the Semantic Scholar website",
          "example": "https://www.semanticscholar.org/author/1741101",
          "type": "string"
        }
      },
      "required": [
        "authorId"
      ],
      "type": "object"
    },
    "AuthorBatch": {
      "properties": {
        "data": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/AuthorWithPapers"
              }
            ],
            "title": "contents of this batch"
          },
          "type": "array"
        },
        "next": {
          "default": 1,
          "description": "starting position of the next batch",
          "title": "absent if no more data exists",
          "type": "integer"
        },
        "offset": {
          "default": 0,
          "description": "starting position for this batch",
          "type": "integer"
        }
      },
      "required": [
        "next",
        "offset"
      ],
      "type": "object"
    },
    "AuthorInfo": {
      "properties": {
        "authorId": {
          "example": "1741101",
          "type": "string"
        },
        "name": {
          "example": "Oren Etzioni",
          "type": "string"
        }
      },
      "required": [
        "authorId",
        "name"
      ],
      "type": "object"
    },
    "AuthorWithPapers": {
      "properties": {
        "affiliations": {
          "description": "List of affiliations",
          "example": [
            "Allen Institute for AI"
          ],
          "type": "object"
        },
        "aliases": {
          "description": "List of aliases",
          "example": [
            "O Et-zioni",
            "Oren Etzioni"
          ],
          "type": "object"
        },
        "authorId": {
          "example": "1741101",
          "type": "string"
        },
        "citationCount": {
          "description": "Author's total citations count",
          "example": 50,
          "type": "string"
        },
        "externalIds": {
          "description": "ORCID/DBLP IDs for this author, if known",
          "example": {
            "DBLP": 123,
            "ORCID": 456
          },
          "type": "object"
        },
        "hIndex": {
          "description": "Author's h-index",
          "example": 5,
          "type": "string"
        },
        "homepage": {
          "description": "Author's own homepage",
          "example": "https://allenai.org/",
          "type": "string"
        },
        "name": {
          "example": "Oren Etzioni",
          "title": "This field will be provided if no fields are specified",
          "type": "string"
        },
        "paperCount": {
          "description": "Author's total publications count",
          "example": 10,
          "type": "string"
        },
        "papers": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/BasePaper"
              }
            ],
            "title": "Paper Info"
          },
          "type": "array"
        },
        "url": {
          "description": "URL on the Semantic Scholar website",
          "example": "https://www.semanticscholar.org/author/1741101",
          "type": "string"
        }
      },
      "required": [
        "authorId"
      ],
      "type": "object"
    },
    "BasePaper": {
      "properties": {
        "abstract": {
          "example": "We describe a deployed scalable system for organizing published scientific literature into a heterogeneous graph to facilitate algorithmic manipulation and discovery.",
          "type": "string"
        },
        "authors": {
          "items": {
            "$ref": "#/definitions/AuthorInfo"
          },
          "title": "Author Info",
          "type": "array"
        },
        "citationCount": {
          "example": 987,
          "type": "integer"
        },
        "externalIds": {
          "description": "Other catalog IDs for this paper, if known. Supports ArXiv, MAG, ACL, PubMed, Medline, PubMedCentral, DBLP, DOI.",
          "example": {
            "ArXiv": "...",
            "DBLP": "...",
            "PubMedCentral": "..."
          },
          "type": "object"
        },
        "fieldsOfStudy": {
          "description": "A list of high-level academic categories",
          "example": [
            "Computer Science"
          ],
          "type": "object"
        },
        "influentialCitationCount": {
          "description": "https://www.semanticscholar.org/faq#influential-citations",
          "example": 654,
          "type": "integer"
        },
        "isOpenAccess": {
          "description": "https://www.openaccess.nl/en/what-is-open-access",
          "type": "boolean"
        },
        "paperId": {
          "example": "649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "referenceCount": {
          "example": 321,
          "type": "integer"
        },
        "title": {
          "example": "Construction of the Literature Graph in Semantic Scholar",
          "title": "This field will be provided if no fields are specified",
          "type": "string"
        },
        "url": {
          "description": "URL on the Semantic Scholar website",
          "example": "https://www.semanticscholar.org/paper/649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "venue": {
          "example": "NAACL",
          "type": "string"
        },
        "year": {
          "example": 2018,
          "type": "integer"
        }
      },
      "required": [
        "paperId"
      ],
      "type": "object"
    },
    "Citation": {
      "properties": {
        "citingPaper": {
          "allOf": [
            {
              "$ref": "#/definitions/BasePaper"
            }
          ],
          "description": "Details about the citing paper"
        },
        "contexts": {
          "description": "List of contexts",
          "example": [
            "SciBERT (Beltagy et al., 2019) follows the BERTâ€™s masking strategy to pre-train the model from scratch using a scientific corpus composed of papers from Semantic Scholar (Ammar et al., 2018).",
            "27M articles from the Semantic Scholar dataset (Ammar et al., 2018)."
          ],
          "type": "object"
        },
        "intents": {
          "description": "List of intents",
          "example": [
            "methodology"
          ],
          "type": "object"
        },
        "isInfluential": {
          "description": "https://www.semanticscholar.org/faq#influential-citations",
          "type": "boolean"
        }
      },
      "required": [
        "citingPaper"
      ],
      "type": "object"
    },
    "CitationBatch": {
      "properties": {
        "data": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Citation"
              }
            ],
            "title": "contents of this batch"
          },
          "type": "array"
        },
        "next": {
          "default": 1,
          "description": "starting position of the next batch",
          "title": "absent if no more data exists",
          "type": "integer"
        },
        "offset": {
          "default": 0,
          "description": "starting position for this batch",
          "type": "integer"
        }
      },
      "required": [
        "next",
        "offset"
      ],
      "type": "object"
    },
    "Embedding": {
      "properties": {
        "model": {
          "description": "The underlying model+version that produced the embedding",
          "example": "specter@v0.1.1",
          "type": "string"
        },
        "vector": {
          "description": "Numerical embedding vector",
          "example": [
            -8.82082748413086,
            -2.6610865592956543
          ],
          "type": "object"
        }
      },
      "required": [
        "model",
        "vector"
      ],
      "type": "object"
    },
    "Error400": {
      "properties": {
        "error": {
          "description": "Depending on the case, error message may be any of these:\n<ul>\n    <li><code>\"Unrecognized or unsupported fields: [bad1, bad2, etc...]\"</code></li>\n    <li><code>\"Unacceptable query params: [badK1=badV1, badK2=badV2, etc...}]\"</code></li>\n    <li>A custom message string</li></ul>",
          "example": "Unrecognized or unsupported fields: [author.creditCardNumber, garbage]",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Error404": {
      "properties": {
        "error": {
          "description": "Depending on the case, error message may be any of these:\n<ul>\n    <li><code>\"Paper/Author/Object not found\"</code></li>\n    <li><code>\"Paper/Author/Object with id ### not found\"</code></li>\n</ul>",
          "example": "Paper with id 0 not found",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FullPaper": {
      "properties": {
        "abstract": {
          "example": "We describe a deployed scalable system for organizing published scientific literature into a heterogeneous graph to facilitate algorithmic manipulation and discovery.",
          "type": "string"
        },
        "authors": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Author"
              }
            ],
            "title": "Author Info"
          },
          "type": "array"
        },
        "citationCount": {
          "example": 987,
          "type": "integer"
        },
        "citations": {
          "items": {
            "$ref": "#/definitions/PaperInfo"
          },
          "title": "Paper Info",
          "type": "array"
        },
        "embedding": {
          "$ref": "#/definitions/Embedding"
        },
        "externalIds": {
          "description": "Other catalog IDs for this paper, if known. Supports ArXiv, MAG, ACL, PubMed, Medline, PubMedCentral, DBLP, DOI.",
          "example": {
            "ArXiv": "...",
            "DBLP": "...",
            "PubMedCentral": "..."
          },
          "type": "object"
        },
        "fieldsOfStudy": {
          "description": "A list of high-level academic categories",
          "example": [
            "Computer Science"
          ],
          "type": "object"
        },
        "influentialCitationCount": {
          "description": "https://www.semanticscholar.org/faq#influential-citations",
          "example": 654,
          "type": "integer"
        },
        "isOpenAccess": {
          "description": "https://www.openaccess.nl/en/what-is-open-access",
          "type": "boolean"
        },
        "paperId": {
          "example": "649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "referenceCount": {
          "example": 321,
          "type": "integer"
        },
        "references": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/PaperInfo"
              }
            ],
            "title": "Paper Info"
          },
          "type": "array"
        },
        "title": {
          "example": "Construction of the Literature Graph in Semantic Scholar",
          "title": "This field will be provided if no fields are specified",
          "type": "string"
        },
        "tldr": {
          "$ref": "#/definitions/Tldr"
        },
        "url": {
          "description": "URL on the Semantic Scholar website",
          "example": "https://www.semanticscholar.org/paper/649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "venue": {
          "example": "NAACL",
          "type": "string"
        },
        "year": {
          "example": 2018,
          "type": "integer"
        }
      },
      "required": [
        "paperId"
      ],
      "type": "object"
    },
    "PaperBatch": {
      "properties": {
        "data": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/PaperWithLinks"
              }
            ],
            "title": "contents of this batch"
          },
          "type": "array"
        },
        "next": {
          "default": 1,
          "description": "starting position of the next batch",
          "title": "absent if no more data exists",
          "type": "integer"
        },
        "offset": {
          "default": 0,
          "description": "starting position for this batch",
          "type": "integer"
        }
      },
      "required": [
        "next",
        "offset"
      ],
      "type": "object"
    },
    "PaperInfo": {
      "properties": {
        "authors": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/AuthorInfo"
              }
            ],
            "title": "Author Info"
          },
          "type": "array"
        },
        "paperId": {
          "example": "649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "title": {
          "example": "Construction of the Literature Graph in Semantic Scholar",
          "title": "This field will be provided if no fields are specified",
          "type": "string"
        },
        "url": {
          "description": "URL on the Semantic Scholar website",
          "example": "https://www.semanticscholar.org/paper/649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "venue": {
          "example": "NAACL",
          "type": "string"
        },
        "year": {
          "example": 2018,
          "type": "integer"
        }
      },
      "required": [
        "paperId"
      ],
      "type": "object"
    },
    "PaperSearchBatch": {
      "properties": {
        "data": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/BasePaper"
              }
            ],
            "title": "contents of this batch"
          },
          "type": "array"
        },
        "next": {
          "default": 1,
          "description": "starting position of the next batch",
          "title": "absent if no more data exists",
          "type": "integer"
        },
        "offset": {
          "default": 0,
          "description": "starting position for this batch",
          "type": "integer"
        },
        "total": {
          "description": "Number of matching search results",
          "example": 15117,
          "type": "string"
        }
      },
      "required": [
        "next",
        "offset",
        "total"
      ],
      "type": "object"
    },
    "PaperWithLinks": {
      "properties": {
        "abstract": {
          "example": "We describe a deployed scalable system for organizing published scientific literature into a heterogeneous graph to facilitate algorithmic manipulation and discovery.",
          "type": "string"
        },
        "authors": {
          "items": {
            "$ref": "#/definitions/AuthorInfo"
          },
          "title": "Author Info",
          "type": "array"
        },
        "citationCount": {
          "example": 987,
          "type": "integer"
        },
        "citations": {
          "items": {
            "$ref": "#/definitions/PaperInfo"
          },
          "title": "Paper Info",
          "type": "array"
        },
        "externalIds": {
          "description": "Other catalog IDs for this paper, if known. Supports ArXiv, MAG, ACL, PubMed, Medline, PubMedCentral, DBLP, DOI.",
          "example": {
            "ArXiv": "...",
            "DBLP": "...",
            "PubMedCentral": "..."
          },
          "type": "object"
        },
        "fieldsOfStudy": {
          "description": "A list of high-level academic categories",
          "example": [
            "Computer Science"
          ],
          "type": "object"
        },
        "influentialCitationCount": {
          "description": "https://www.semanticscholar.org/faq#influential-citations",
          "example": 654,
          "type": "integer"
        },
        "isOpenAccess": {
          "description": "https://www.openaccess.nl/en/what-is-open-access",
          "type": "boolean"
        },
        "paperId": {
          "example": "649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "referenceCount": {
          "example": 321,
          "type": "integer"
        },
        "references": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/PaperInfo"
              }
            ],
            "title": "Paper Info"
          },
          "type": "array"
        },
        "title": {
          "example": "Construction of the Literature Graph in Semantic Scholar",
          "title": "This field will be provided if no fields are specified",
          "type": "string"
        },
        "url": {
          "description": "URL on the Semantic Scholar website",
          "example": "https://www.semanticscholar.org/paper/649def34f8be52c8b66281af98ae884c09aef38b",
          "type": "string"
        },
        "venue": {
          "example": "NAACL",
          "type": "string"
        },
        "year": {
          "example": 2018,
          "type": "integer"
        }
      },
      "required": [
        "paperId"
      ],
      "type": "object"
    },
    "Reference": {
      "properties": {
        "citedPaper": {
          "allOf": [
            {
              "$ref": "#/definitions/BasePaper"
            }
          ],
          "description": "Details about the cited paper"
        },
        "contexts": {
          "description": "List of contexts",
          "example": [
            "SciBERT (Beltagy et al., 2019) follows the BERTâ€™s masking strategy to pre-train the model from scratch using a scientific corpus composed of papers from Semantic Scholar (Ammar et al., 2018).",
            "27M articles from the Semantic Scholar dataset (Ammar et al., 2018)."
          ],
          "type": "object"
        },
        "intents": {
          "description": "List of intents",
          "example": [
            "methodology"
          ],
          "type": "object"
        },
        "isInfluential": {
          "description": "https://www.semanticscholar.org/faq#influential-citations",
          "type": "boolean"
        }
      },
      "required": [
        "citedPaper"
      ],
      "type": "object"
    },
    "ReferenceBatch": {
      "properties": {
        "data": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Reference"
              }
            ],
            "title": "contents of this batch"
          },
          "type": "array"
        },
        "next": {
          "default": 1,
          "description": "starting position of the next batch",
          "title": "absent if no more data exists",
          "type": "integer"
        },
        "offset": {
          "default": 0,
          "description": "starting position for this batch",
          "type": "integer"
        }
      },
      "required": [
        "next",
        "offset"
      ],
      "type": "object"
    },
    "Tldr": {
      "properties": {
        "model": {
          "description": "The underlying model+version that produced the tldr",
          "example": "tldr@v2.0.0",
          "type": "string"
        },
        "text": {
          "description": "paper TLDR summary",
          "example": "This paper reduces literature graph construction into familiar NLP tasks, point out research challenges due to differences from standard formulations of these tasks, and report empirical results for each task.",
          "type": "string"
        }
      },
      "required": [
        "model",
        "text"
      ],
      "type": "object"
    }
  },
  "info": {
    "description": "Fetch paper and author data from the Semantic Scholar corpus",
    "title": "Literature Graph Service",
    "version": "1.0"
  },
  "paths": {
    "/author/{author_id}": {
      "get": {
        "operationId": "get_graph_get_author",
        "responses": {
          "200": {
            "description": "Author with default or requested fields",
            "schema": {
              "$ref": "#/definitions/AuthorWithPapers"
            }
          },
          "400": {
            "description": "Bad query parameters",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "404": {
            "description": "Bad paper id",
            "schema": {
              "$ref": "#/definitions/Error404"
            }
          }
        },
        "summary": "Details about an author",
        "tags": [
          "/author"
        ]
      },
      "parameters": [
        {
          "description": "A comma-separated list of the fields to be returned.<br><br>\nThe following case-sensitive author fields are recognized:\n<ul>\n    <li><code>authorId</code> - Always included</li>\n    <li><code>externalIds</code></li>\n    <li><code>url</code></li>\n    <li><code>name</code> - Included if no fields are specified</li>\n    <li><code>aliases</code></li>\n    <li><code>affiliations</code></li>\n    <li><code>homepage</code></li>\n    <li><code>paperCount</code></li>    \n    <li><code>citationCount</code></li>    \n    <li><code>hIndex</code></li>        \n    <li><code>papers</code></li>\n        <ul>\n            <li><code>paperId</code> - Always included</li>\n            <li><code>externalIds</code></li>\n            <li><code>url</code></li>\n            <li><code>title</code> - Included if no fields are specified</li>\n            <li><code>abstract</code></li>\n            <li><code>venue</code></li>\n            <li><code>year</code></li>\n            <li><code>referenceCount</code></li>\n            <li><code>citationCount</code></li>\n            <li><code>influentialCitationCount</code></li>\n            <li><code>isOpenAccess</code></li>\n            <li><code>fieldsOfStudy</code></li>\n            <li><code>authors</code>- Will include: <code>authorId</code> & <code>name</code></li>\n            <li>To get more detailed information about an author's papers, use the <code>/author/{author_id}/papers</code> endpoint</li>\n        </ul>\n</ul>\n<br><br>\nExamples:\n<ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/author/1741101</code></li>\n    <ul>\n        <li>Returns the author's always included field of authorId plus the name.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/author/1741101?fields=aliases,papers</code></li>\n    <ul>\n        <li>Returns the author's authorId, aliases, and list of papers.  </li>\n        <li>Each paper has its paperId plus its title.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/author/1741101?fields=url,papers.abstract,papers.authors</code></li>\n    <ul>\n        <li>Returns the author's authorId, url, and list of papers.  </li>\n        <li>Each paper has its paperId, abstract, and list of authors.</li>\n        <li>In that list of authors, each author has their authorId and name.</li>\n    </ul>\n</ul>",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "in": "path",
          "name": "author_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/author/{author_id}/papers": {
      "get": {
        "description": "Fetch the papers of an author in batches.<br><br>\nOnly retrieves the most recent 10,000 citations/references for papers belonging to the batch\nTo retrieve the full set of citations for a paper,\nuse the /paper/{paper_id}/citations endpoint",
        "operationId": "get_graph_get_author_papers",
        "responses": {
          "200": {
            "description": "List of papers with default or requested fields",
            "schema": {
              "$ref": "#/definitions/PaperBatch"
            }
          },
          "400": {
            "description": "Bad query parameters",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "404": {
            "description": "Bad paper id",
            "schema": {
              "$ref": "#/definitions/Error404"
            }
          }
        },
        "summary": "Details about an author's papers",
        "tags": [
          "/author"
        ]
      },
      "parameters": [
        {
          "default": 0,
          "description": "When returning a list of results, start with the element at this position in the list.",
          "in": "query",
          "name": "offset",
          "type": "integer"
        },
        {
          "default": 100,
          "description": "The maximum number of results to return.<br>\nThe sum of <code>offset</code> and <code>limit</code> must be < 10000",
          "in": "query",
          "name": "limit",
          "type": "integer"
        },
        {
          "description": "A comma-separated list of the fields to be returned.<br><br>\n\nThe following case-sensitive paper fields are recognized:\n<ul>\n    <li><code>paperId</code> - Always included</li>\n    <li><code>externalIds</code></li>\n    <li><code>url</code></li>\n    <li><code>title</code> - Included if no fields are specified</li>\n    <li><code>abstract</code></li>\n    <li><code>venue</code></li>\n    <li><code>year</code></li>\n    <li><code>referenceCount</code></li>\n    <li><code>citationCount</code></li>\n    <li><code>influentialCitationCount</code></li>\n    <li><code>isOpenAccess</code></li>\n    <li><code>fieldsOfStudy</code></li>\n    <li><code>authors</code>- Up to 500 will be returned.  Will include: <code>authorId</code> & <code>name</code></li>\n    <li><code>citations</code> - May be truncated</li>\n    <ul>\n        <li><code>paperId</code> - Always included</li>\n        <li><code>url</code>\n        <li><code>title</code></li>\n        <li><code>venue</code></li>\n        <li><code>year</code></li>\n        <li><code>authors</code>- Will include: <code>authorId</code> & <code>name</code></li>\n        <li>Total number of citations will be truncated at 10,000 for the entire batch.</li>\n        <li>To fetch more, reduce the size of the batch with <code>limit=</code> or use the <code>/paper/{paper_id}/citations</code> endpoint.</li>\n    </ul>\n    <li><code>references</code> - May be truncated</li>\n    <ul>\n        <li><code>paperId</code> - Always included</li>\n        <li><code>url</code></li>\n        <li><code>title</code></li>\n        <li><code>venue</code></li>\n        <li><code>year</code></li>\n        <li><code>authors</code>- Will include: <code>authorId</code> & <code>name</code></li>\n        <li>Total number of references will be truncated at 10,000 for the entire batch.</li>\n        <li>To fetch more, reduce the size of the batch with <code>limit=</code> or use the <code>/paper/{paper_id}/references</code> endpoint.</li>\n    </ul>\n</ul>\n<br><br>\nExamples:\n<ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/author/1741101/papers</code></li>\n    <ul>\n        <li>Return with offset=0, and data is a list of the first 100 papers.</li>\n        <li>Each paper has its paperId and title.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/author/1741101/papers?fields=url,year,authors&limit=2</code></li>\n    <ul>\n        <li>Returns with offset=0, next=2, and data is a list of 2 papers.</li>\n        <li>Each paper has its paperId, url, year, and list of authors.</li>\n        <li>Each author has their authorId and name.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/author/1741101/papers?fields=citations.authors&offset=260</code></li>\n    <ul>\n        <li>Returns with offset=260, and data is a list of the last 4 papers.</li>\n        <li>Each paper has its paperId and a list of citations.</li>\n        <li>Each citation has its paperId and a list of authors.</li>\n        <li>Each author has their authorId and name.</li>\n    </ul>\n</ul>\n\n",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "in": "path",
          "name": "author_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/paper/search": {
      "get": {
        "operationId": "get_graph_get_paper_search",
        "responses": {
          "200": {
            "description": "Batch of papers with default or requested fields",
            "schema": {
              "$ref": "#/definitions/PaperSearchBatch"
            }
          },
          "400": {
            "description": "Bad query parameters",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          }
        },
        "summary": "Search for papers by keyword",
        "tags": [
          "/paper"
        ]
      },
      "parameters": [
        {
          "default": 0,
          "description": "When returning a list of results, start with the element at this position in the list.",
          "in": "query",
          "name": "offset",
          "type": "integer"
        },
        {
          "default": 100,
          "description": "The maximum number of results to return.<br>\nThe sum of <code>offset</code> and <code>limit</code> must be < 10000",
          "in": "query",
          "name": "limit",
          "type": "integer"
        },
        {
          "description": "A comma-separated list of the fields to be returned.<br><br>\n\nThe following case-sensitive paper fields are recognized:\n<ul>\n    <li><code>paperId</code> - Always included</li>\n    <li><code>externalIds</code></li>\n    <li><code>url</code></li>\n    <li><code>title</code> - Included if no fields are specified</li>\n    <li><code>abstract</code></li>\n    <li><code>venue</code></li>\n    <li><code>year</code></li>\n    <li><code>referenceCount</code></li>\n    <li><code>citationCount</code></li>\n    <li><code>influentialCitationCount</code></li>\n    <li><code>isOpenAccess</code></li>\n    <li><code>fieldsOfStudy</code></li>\n    <li><code>authors</code> - Up to 500 will be returned</li>\n    <ul>\n        <li><code>authorId</code> - Always included</li>\n        <li><code>name</code> - Always included</li>\n    </ul>\n</ul>\n<br><br>\nExamples:\n<ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/search?query=covid+vaccination&offset=100&limit=3</code></li>\n    <ul>\n        <li>Returns with total=576278, offset=100, next=103, and data is a list of 3 papers.</li>\n        <li>Each paper has the always included field of paperId plus its title.  </li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/search?query=covid&fields=url,abstract,authors</code></li>\n    <ul>\n        <li>Returns with total=639637, offset=0, next=100, and data is a list of 100 papers.</li>\n        <li>Each paper has paperId, url, abstract, and a list of authors.</li>\n        <li>Each author under that list has authorId and name.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/search?query=totalGarbageNonsense</code></li>\n    <ul>\n        <li>Returns with total = 0, offset=0, and data is a list of 0 papers.</li>\n    </ul>\n</ul>",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "A plain-text search query string. No special query syntax is supported.\n\nSee our <a href=\"https://medium.com/ai2-blog/building-a-better-search-engine-for-semantic-scholar-ea23a0b661e7\">blog post</a>\nfor a description of our search relevance algorithm.\n\nBecause of the subtleties of finding partial phrase matches in different parts of the document,\nbe cautious about interpreting the <code>total</code> field as a count of documents containing\nany particular word in the query.",
          "in": "query",
          "name": "query",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/paper/{paper_id}": {
      "get": {
        "operationId": "get_graph_get_paper",
        "responses": {
          "200": {
            "description": "Paper with default or requested fields",
            "schema": {
              "$ref": "#/definitions/FullPaper"
            }
          },
          "400": {
            "description": "Bad query parameters",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "404": {
            "description": "Bad paper id",
            "schema": {
              "$ref": "#/definitions/Error404"
            }
          }
        },
        "summary": "Details about a paper",
        "tags": [
          "/paper"
        ]
      },
      "parameters": [
        {
          "description": "The following types of IDs are supported:\n<ul>\n    <li><code>&lt;sha&gt;</code> - a Semantic Scholar ID, e.g. <code>649def34f8be52c8b66281af98ae884c09aef38b</code></li>\n    <li><code>CorpusId:&lt;id&gt;</code> - Semantic Scholar numerical ID, e.g. <code>215416146</code></li>\n    <li><code>DOI:&lt;doi&gt;</code> - a <a href=\"http://doi.org\">Digital Object Identifier</a>,\n        e.g. <code>DOI:10.18653/v1/N18-3011</code></li>\n    <li><code>ARXIV:&lt;id&gt;</code> - <a href=\"https://arxiv.org/\">arXiv.rg</a>, e.g. <code>ARXIV:2106.15928</code></li>\n    <li><code>MAG:&lt;id&gt;</code> - Microsoft Academic Graph, e.g. <code>MAG:112218234</code></li>\n    <li><code>ACL:&lt;id&gt;</code> - Association for Computational Linguistics, e.g. <code>ACL:W12-3903</code></li>\n    <li><code>PMID:&lt;id&gt;</code> - PubMed/Medline, e.g. <code>PMID:19872477</code></li>\n    <li><code>PMCID:&lt;id&gt;</code> - PubMed Central, e.g. <code>PMCID:2323736</code></li>\n    <li><code>URL:&lt;url&gt;</code> - URL from one of the sites listed below, e.g. <code>URL:https://arxiv.org/abs/2106.15928v1</code></li>\n</ul>\n\nURLs are recognized from the following sites:\n<ul>\n    <li><a href=\"https://www.semanticscholar.org/\">semanticscholar.org</a></li>\n    <li><a href=\"https://arxiv.org/\">arxiv.org</a></li>\n    <li><a href=\"https://www.aclweb.org\">aclweb.org</a></li>\n    <li><a href=\"https://www.acm.org/\">acm.org</a></li>\n    <li><a href=\"https://www.biorxiv.org/\">biorxiv.org</a></li>\n</ul>",
          "in": "path",
          "name": "paper_id",
          "required": true,
          "type": "string"
        },
        {
          "description": "A comma-separated list of the fields to be returned.<br><br>\n\nThe following case-sensitive paper fields are recognized:\n<ul>\n    <li><code>paperId</code> - Always included</li>\n    <li><code>externalIds</code></li>\n    <li><code>url</code></li>\n    <li><code>title</code> - Included if no fields are specified</li>\n    <li><code>abstract</code></li>\n    <li><code>venue</code></li>\n    <li><code>year</code></li>\n    <li><code>referenceCount</code></li>\n    <li><code>citationCount</code></li>\n    <li><code>influentialCitationCount</code></li>\n    <li><code>isOpenAccess</code></li>\n    <li><code>fieldsOfStudy</code></li>\n    <li><code>authors</code> - Up to 500 will be returned</li>\n        <ul>\n            <li><code>authorId</code> - Always included</li>\n            <li><code>externalIds</code></li>\n            <li><code>url</code></li>\n            <li><code>name</code> - Included if no fields are specified</li>\n            <li><code>aliases</code></li>\n            <li><code>affiliations</code></li>\n            <li><code>homepage</code></li>\n            <li>To get more detailed information about a paper's authors, use the <code>/paper/{paper_id}/authors</code> endpoint</li>\n        </ul>\n    <li><code>citations</code> - Up to 1000 will be returned</li>\n        <ul>\n            <li><code>paperId</code> - Always included</li>\n            <li><code>url</code></li>\n            <li><code>title</code> - Included if no fields are specified</li>\n            <li><code>venue</code></li>\n            <li><code>year</code></li>\n            <li><code>authors</code> - Will include: <code>authorId</code> & <code>name</code></li>\n            <li>To get more detailed information about a paper's citations, use the <code>/paper/{paper_id}/citations</code> endpoint</li>\n        </ul>\n    <li><code>references</code> - Up to 1000 will be returned</li>\n        <ul>\n            <li><code>paperId</code> - Always included</li>\n            <li><code>url</code></li>\n            <li><code>title</code> - Included if no fields are specified</li>\n            <li><code>venue</code></li>\n            <li><code>year</code></li>\n            <li><code>authors</code> - Will include: <code>authorId</code> & <code>name</code></li>\n            <li>To get more detailed information about a paper's references, use the <code>/paper/{paper_id}/references</code> endpoint</li>\n        </ul>\n    <li><code>embedding</code></li>\n    <li><code>tldr</code></li>\n</ul>\n<br><br>\nExamples:\n<ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b</code></li>\n    <ul>\n        <li>Returns the paper's always included field of paperId plus its title.  </li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b?fields=url,year,authors</code></li>\n    <ul>\n        <li>Returns the paper's paperId, url, year, and list of authors.  </li>\n        <li>Each author has authorId and name.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b?fields=citations.authors</code></li>\n    <ul>\n        <li>Returns the paper's paperId and list of citations.  </li>\n        <li>Each citation has its paperId plus its list of authors.</li>\n        <li>Each author has their 2 always included fields of authorId and name.</li>\n    </ul>\n</ul>",
          "in": "query",
          "name": "fields",
          "type": "string"
        }
      ]
    },
    "/paper/{paper_id}/authors": {
      "get": {
        "operationId": "get_graph_get_paper_authors",
        "responses": {
          "200": {
            "description": "List of Authors with default or requested fields",
            "schema": {
              "$ref": "#/definitions/AuthorBatch"
            }
          },
          "400": {
            "description": "Bad query parameters",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "404": {
            "description": "Bad paper id",
            "schema": {
              "$ref": "#/definitions/Error404"
            }
          }
        },
        "summary": "Details about a paper's authors",
        "tags": [
          "/paper"
        ]
      },
      "parameters": [
        {
          "default": 0,
          "description": "When returning a list of results, start with the element at this position in the list.",
          "in": "query",
          "name": "offset",
          "type": "integer"
        },
        {
          "default": 100,
          "description": "The maximum number of results to return.<br>\nThe sum of <code>offset</code> and <code>limit</code> must be < 10000",
          "in": "query",
          "name": "limit",
          "type": "integer"
        },
        {
          "description": "A comma-separated list of the fields to be returned.<br><br>\nThe following case-sensitive author fields are recognized:\n<ul>\n    <li><code>authorId</code> - Always included</li>\n    <li><code>externalIds</code></li>\n    <li><code>url</code></li>\n    <li><code>name</code> - Included if no fields are specified</li>\n    <li><code>aliases</code></li>\n    <li><code>affiliations</code></li>\n    <li><code>homepage</code></li>\n    <li><code>papers</code></li>\n    <ul>\n        <li><code>paperId</code> - Always included</li>\n        <li><code>externalIds</code></li>\n        <li><code>url</code></li>\n        <li><code>title</code> - Included if no fields are specified</li>\n        <li><code>abstract</code></li>\n        <li><code>venue</code></li>\n        <li><code>year</code></li>\n        <li><code>referenceCount</code></li>\n        <li><code>citationCount</code></li>\n        <li><code>influentialCitationCount</code></li>\n        <li><code>isOpenAccess</code></li>\n        <li><code>fieldsOfStudy</code></li>\n        <li><code>authors</code> - Will include: <code>authorId</code> & <code>name</code></li>\n    </ul>\n</ul>\n<br><br>\nExamples:\n<ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/authors</code></li>\n    <ul>\n        <li>Returns with offset=0, and data is a list of all 3 authors.</li>\n        <li>Each author has their authorId and name</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/authors?fields=affiliations,papers&limit=2</code></li>\n    <ul>\n        <li>Returns with offset=0, next=2, and data is a list of 2 authors.</li>\n        <li>Each author has their authorId, affiliations, and list of papers.</li>\n        <li>Each paper has its paperId and title.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/authors?fields=url,papers.year,papers.authors&offset=2</code></li>\n    <ul>\n        <li>Returns with offset=2, and data is a list containing the last author.</li>\n        <li>This author has their authorId, url, and list of papers.</li>\n        <li>Each paper has its paperId, year, and list of authors.</li>\n        <li>In that list of authors, each author has their authorId and name.</li>\n    </ul>\n</ul>",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "The following types of IDs are supported:\n<ul>\n    <li><code>&lt;sha&gt;</code> - a Semantic Scholar ID, e.g. <code>649def34f8be52c8b66281af98ae884c09aef38b</code></li>\n    <li><code>CorpusId:&lt;id&gt;</code> - Semantic Scholar numerical ID, e.g. <code>215416146</code></li>\n    <li><code>DOI:&lt;doi&gt;</code> - a <a href=\"http://doi.org\">Digital Object Identifier</a>,\n        e.g. <code>DOI:10.18653/v1/N18-3011</code></li>\n    <li><code>ARXIV:&lt;id&gt;</code> - <a href=\"https://arxiv.org/\">arXiv.rg</a>, e.g. <code>ARXIV:2106.15928</code></li>\n    <li><code>MAG:&lt;id&gt;</code> - Microsoft Academic Graph, e.g. <code>MAG:112218234</code></li>\n    <li><code>ACL:&lt;id&gt;</code> - Association for Computational Linguistics, e.g. <code>ACL:W12-3903</code></li>\n    <li><code>PMID:&lt;id&gt;</code> - PubMed/Medline, e.g. <code>PMID:19872477</code></li>\n    <li><code>PMCID:&lt;id&gt;</code> - PubMed Central, e.g. <code>PMCID:2323736</code></li>\n    <li><code>URL:&lt;url&gt;</code> - URL from one of the sites listed below, e.g. <code>URL:https://arxiv.org/abs/2106.15928v1</code></li>\n</ul>\n\nURLs are recognized from the following sites:\n<ul>\n    <li><a href=\"https://www.semanticscholar.org/\">semanticscholar.org</a></li>\n    <li><a href=\"https://arxiv.org/\">arxiv.org</a></li>\n    <li><a href=\"https://www.aclweb.org\">aclweb.org</a></li>\n    <li><a href=\"https://www.acm.org/\">acm.org</a></li>\n    <li><a href=\"https://www.biorxiv.org/\">biorxiv.org</a></li>\n</ul>",
          "in": "path",
          "name": "paper_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/paper/{paper_id}/citations": {
      "get": {
        "description": "Fetch details about the papers the cite this paper (i.e. papers in whose bibliography this paper appears)",
        "operationId": "get_graph_get_paper_citations",
        "responses": {
          "200": {
            "description": "Batch of citations with default or requested fields",
            "schema": {
              "$ref": "#/definitions/CitationBatch"
            }
          },
          "400": {
            "description": "Bad query parameters",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "404": {
            "description": "Bad paper id",
            "schema": {
              "$ref": "#/definitions/Error404"
            }
          }
        },
        "summary": "Details about a paper's citations",
        "tags": [
          "/paper"
        ]
      },
      "parameters": [
        {
          "default": 0,
          "description": "When returning a list of results, start with the element at this position in the list.",
          "in": "query",
          "name": "offset",
          "type": "integer"
        },
        {
          "default": 100,
          "description": "The maximum number of results to return.<br>\nThe sum of <code>offset</code> and <code>limit</code> must be < 10000",
          "in": "query",
          "name": "limit",
          "type": "integer"
        },
        {
          "description": "A comma-separated list of the fields to be returned.\n<br><br>\nThe following case-sensitive citation fields are recognized:\n<ul>\n    <li><code>contexts</code></li>\n    <li><code>intents</code></li>\n    <li><code>isInfluential</code></li>\n    <li><code>paperId</code> - Always included</li>\n    <li><code>externalIds</code></li>\n    <li><code>url</code></li>\n    <li><code>title</code> - Included if no fields are specified</li>\n    <li><code>abstract</code></li>\n    <li><code>venue</code></li>\n    <li><code>year</code></li>\n    <li><code>referenceCount</code></li>\n    <li><code>citationCount</code></li>\n    <li><code>influentialCitationCount</code></li>\n    <li><code>isOpenAccess</code></li>\n    <li><code>fieldsOfStudy</code></li>\n    <li><code>authors</code> - Up to 500 will be returned.  Will include: <code>authorId</code> & <code>name</code></li>\n</ul>\n<br>\n<br>\nExamples:\n<ul>\n    <li>Let's suppose that the paper in the examples below has 1600 citations...</li>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/citations</code></li>\n    <ul>\n        <li>Returns with offset=0, next=100, and data is a list of 100 citations.</li>\n        <li>Each citation has a citingPaper which contains its paperId and title.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/citations?fields=contexts,intents,isInfluential,abstract&offset=200&limit=10</code></li>\n    <ul>\n        <li>Returns with offset=200, next=210, and data is a list of 10 citations.</li>\n        <li>Each citation has contexts, intents, isInfluential, and a citingPaper which contains its paperId and abstract.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/citations?fields=authors&offset=1500&limit=500</code></li>\n    <ul>\n        <li>Returns with offset=1500, and data is a list of the last 100 citations.</li>\n        <li>Each citation has a citingPaper which contains its paperId plus a list of authors</li>\n        <li>The authors under each citingPaper has their authorId and name.</li>\n    </ul>\n</ul>",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "The following types of IDs are supported:\n<ul>\n    <li><code>&lt;sha&gt;</code> - a Semantic Scholar ID, e.g. <code>649def34f8be52c8b66281af98ae884c09aef38b</code></li>\n    <li><code>CorpusId:&lt;id&gt;</code> - Semantic Scholar numerical ID, e.g. <code>215416146</code></li>\n    <li><code>DOI:&lt;doi&gt;</code> - a <a href=\"http://doi.org\">Digital Object Identifier</a>,\n        e.g. <code>DOI:10.18653/v1/N18-3011</code></li>\n    <li><code>ARXIV:&lt;id&gt;</code> - <a href=\"https://arxiv.org/\">arXiv.rg</a>, e.g. <code>ARXIV:2106.15928</code></li>\n    <li><code>MAG:&lt;id&gt;</code> - Microsoft Academic Graph, e.g. <code>MAG:112218234</code></li>\n    <li><code>ACL:&lt;id&gt;</code> - Association for Computational Linguistics, e.g. <code>ACL:W12-3903</code></li>\n    <li><code>PMID:&lt;id&gt;</code> - PubMed/Medline, e.g. <code>PMID:19872477</code></li>\n    <li><code>PMCID:&lt;id&gt;</code> - PubMed Central, e.g. <code>PMCID:2323736</code></li>\n    <li><code>URL:&lt;url&gt;</code> - URL from one of the sites listed below, e.g. <code>URL:https://arxiv.org/abs/2106.15928v1</code></li>\n</ul>\n\nURLs are recognized from the following sites:\n<ul>\n    <li><a href=\"https://www.semanticscholar.org/\">semanticscholar.org</a></li>\n    <li><a href=\"https://arxiv.org/\">arxiv.org</a></li>\n    <li><a href=\"https://www.aclweb.org\">aclweb.org</a></li>\n    <li><a href=\"https://www.acm.org/\">acm.org</a></li>\n    <li><a href=\"https://www.biorxiv.org/\">biorxiv.org</a></li>\n</ul>",
          "in": "path",
          "name": "paper_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/paper/{paper_id}/references": {
      "get": {
        "description": "Fetch details about the papers cited by this paper (i.e. appearing in this paper's bibliography)",
        "operationId": "get_graph_get_paper_references",
        "responses": {
          "200": {
            "description": "Batch of references with default or requested fields",
            "schema": {
              "$ref": "#/definitions/ReferenceBatch"
            }
          },
          "400": {
            "description": "Bad query parameters",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "404": {
            "description": "Bad paper id",
            "schema": {
              "$ref": "#/definitions/Error404"
            }
          }
        },
        "summary": "Details about a paper's references",
        "tags": [
          "/paper"
        ]
      },
      "parameters": [
        {
          "default": 0,
          "description": "When returning a list of results, start with the element at this position in the list.",
          "in": "query",
          "name": "offset",
          "type": "integer"
        },
        {
          "default": 100,
          "description": "The maximum number of results to return.<br>\nThe sum of <code>offset</code> and <code>limit</code> must be < 10000",
          "in": "query",
          "name": "limit",
          "type": "integer"
        },
        {
          "description": "A comma-separated list of the fields to be returned.\n<br><br>\nThe following case-sensitive reference fields are recognized:\n<ul>\n    <li><code>contexts</code></li>\n    <li><code>intents</code></li>\n    <li><code>isInfluential</code></li>\n    <li><code>paperId</code> - Always included</li>\n    <li><code>externalIds</code></li>\n    <li><code>url</code></li>\n    <li><code>title</code> - Included if no fields are specified</li>\n    <li><code>abstract</code></li>\n    <li><code>venue</code></li>\n    <li><code>year</code></li>\n    <li><code>referenceCount</code></li>\n    <li><code>citationCount</code></li>\n    <li><code>influentialCitationCount</code></li>\n    <li><code>isOpenAccess</code></li>\n    <li><code>fieldsOfStudy</code></li>\n    <li><code>authors</code> - Up to 500 will be returned.  Will include: <code>authorId</code> & <code>name</code></li>\n</ul>\n<br>\n<br>\nExamples:\n<ul>\n    <li>Let's suppose that the paper in the examples below has 1600 references...</li>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/references</code></li>\n    <ul>\n        <li>Returns with offset=0, next=100, and data is a list of 100 references.</li>\n        <li>Each reference has a citedPaper which contains its paperId and title.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/references?fields=contexts,intents,isInfluential,abstract&offset=200&limit=10</code></li>\n    <ul>\n        <li>Returns with offset=200, next=210, and data is a list of 10 references.</li>\n        <li>Each reference has contexts, intents, isInfluential, and a citedPaper which contains its paperId and abstract.</li>\n    </ul>\n    <li><code>https://api.semanticscholar.org/graph/v1/paper/649def34f8be52c8b66281af98ae884c09aef38b/references?fields=authors&offset=1500&limit=500</code></li>\n    <ul>\n        <li>Returns with offset=1500, and data is a list of the last 100 references.</li>\n        <li>Each reference has a citedPaper which contains its paperId plus a list of authors</li>\n        <li>The authors under each citedPaper has their authorId and name.</li>\n    </ul>\n</ul>",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "The following types of IDs are supported:\n<ul>\n    <li><code>&lt;sha&gt;</code> - a Semantic Scholar ID, e.g. <code>649def34f8be52c8b66281af98ae884c09aef38b</code></li>\n    <li><code>CorpusId:&lt;id&gt;</code> - Semantic Scholar numerical ID, e.g. <code>215416146</code></li>\n    <li><code>DOI:&lt;doi&gt;</code> - a <a href=\"http://doi.org\">Digital Object Identifier</a>,\n        e.g. <code>DOI:10.18653/v1/N18-3011</code></li>\n    <li><code>ARXIV:&lt;id&gt;</code> - <a href=\"https://arxiv.org/\">arXiv.rg</a>, e.g. <code>ARXIV:2106.15928</code></li>\n    <li><code>MAG:&lt;id&gt;</code> - Microsoft Academic Graph, e.g. <code>MAG:112218234</code></li>\n    <li><code>ACL:&lt;id&gt;</code> - Association for Computational Linguistics, e.g. <code>ACL:W12-3903</code></li>\n    <li><code>PMID:&lt;id&gt;</code> - PubMed/Medline, e.g. <code>PMID:19872477</code></li>\n    <li><code>PMCID:&lt;id&gt;</code> - PubMed Central, e.g. <code>PMCID:2323736</code></li>\n    <li><code>URL:&lt;url&gt;</code> - URL from one of the sites listed below, e.g. <code>URL:https://arxiv.org/abs/2106.15928v1</code></li>\n</ul>\n\nURLs are recognized from the following sites:\n<ul>\n    <li><a href=\"https://www.semanticscholar.org/\">semanticscholar.org</a></li>\n    <li><a href=\"https://arxiv.org/\">arxiv.org</a></li>\n    <li><a href=\"https://www.aclweb.org\">aclweb.org</a></li>\n    <li><a href=\"https://www.acm.org/\">acm.org</a></li>\n    <li><a href=\"https://www.biorxiv.org/\">biorxiv.org</a></li>\n</ul>",
          "in": "path",
          "name": "paper_id",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {
    "MaskError": {
      "description": "When any error occurs on mask"
    },
    "ParseError": {
      "description": "When a mask can't be parsed"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "/paper"
    },
    {
      "name": "/author"
    }
  ]
}